services:
  gateway-service:
    build: gateway-service
    ports:
      - "8080:8080"
    networks:
      - default-network
    labels:
      prometheus-scrape: "true"
    restart: always

  func-tests:
    build:
      context: ./func-tests
    image: func-tests:latest
    networks:
      - default-network
    depends_on:
      - gateway-service
    environment:
      GATEWAY_BASE_URL: http://gateway-service:8080
    volumes:
      - ./func-tests/build/reports:/app/build/reports

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    user: root
    # links:
    #   - alertmanager
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # For service discovery
      - ./prometheus:/etc/prometheus
    extra_hosts:
      - 'host.docker.internal:host-gateway' 
    command:
      - '--config.file=/etc/prometheus/prometheus-dev.yml'
    restart: always
    networks:
      - default-network
  
  # alertmanager: # Note to sell, will do this later once deployed to cloud / can sensible store email to send messages to.
  #   image: prom/alertmanager
  #   ports:
  #     - '9093:9093'
  #   volumes:
  #     - ./alertmanager:/etc/alertmanager
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #   restart: always
  
  # grafana:
  #   image: grafana/grafana-enterprise
  #   ports:
  #     - '3000:3000'
  #   depends_on:
  #     - prometheus
  #   environment:
  #     #      - GF_SERVER_ROOT_URL=http://my.grafana.server/
  #     #      - GF_INSTALL_PLUGINS=grafana-clock-panel
  #     - GF_INSTALL_PLUGINS=grafana-piechart-panel
  #   volumes:
  #     - './grafana/datasources:/etc/grafana/provisioning/datasources'
  #     - './grafana/dashboards/dashboards.yml:/etc/grafana/provisioning/dashboards/main.yml'
  #     - './grafana/dashboard-backup/:/var/lib/grafana/dashboards'
  #   networks:
  #     - default-network
  
networks:
  default-network:
    driver: bridge