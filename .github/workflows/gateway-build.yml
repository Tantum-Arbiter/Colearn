name: Gateway Build and Push

on:
  push:
    paths:
      - 'gateway-service/**'
      - '.github/workflows/gateway-build.yml'

permissions:
  contents: write

env:
  IMAGE_NAME: gateway-service
  REGION: europe-west1
  PROJECT_ID: apt-icon-472307-b7
  SERVICE: gateway-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker login to Artifact Registry
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' | \
            docker login -u _json_key --password-stdin \
            https://europe-west1-docker.pkg.dev

      - id: build
        working-directory: gateway-service
        run: |
          PATCH=$(git rev-list --count HEAD)
          VERSION="0.0.$PATCH"
          GAR_REPO="europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/artifact-repo/${{ env.IMAGE_NAME }}"
          GAR_IMAGE="$GAR_REPO:$VERSION"
          GAR_LATEST="$GAR_REPO:latest"
          
          echo "DEBUG: VERSION=$VERSION"
          echo "DEBUG: GAR_IMAGE=$GAR_IMAGE"
          echo "DEBUG: GAR_LATEST=$GAR_LATEST"

          docker build -t $GAR_IMAGE -t $GAR_LATEST .
          docker push $GAR_IMAGE
          docker push $GAR_LATEST

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "DEBUG: Built and pushed $GAR_IMAGE and $GAR_LATEST"

  deploy-functional:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Debug GAR image url
        run: |
          echo "DEBUG: Deploying image=europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/artifact-repo/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}"

      - name: Check if version is available
        run: |
          echo "VERSION=${{ needs.build-and-push.outputs.image_tag }}"

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE \
          --image "europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/artifact-repo/${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}" \
          --region ${{ env.REGION }} \
          --project ${{ env.PROJECT_ID }} \
          --service-account svc-deploy-functional@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
          --no-allow-unauthenticated

      - name: Deploy functional test container
        run: |
          gcloud run deploy gateway-functional-test \
            --image "europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/artifact-repo/gateway-functional-test:${{ needs.build-and-push.outputs.image_tag }}" \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }} \
            --service-account svc-deploy-functional@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --no-allow-unauthenticated

  run-functional-tests:
    needs: deploy-functional
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Execute Cloud Run Job for functional tests
        run: |
          echo "Executing functional test job: gateway-functional-test-job"
          gcloud run jobs execute gateway-functional-test-job \
            --region europe-west1 \
            --project apt-icon-472307-b7 \
            --wait \
            --format='value(status.runStatus.exitCode)' > exit_code.txt
          
          EXIT_CODE=$(cat exit_code.txt)
          echo "Exit code: $EXIT_CODE"
          
          if [[ "$EXIT_CODE" != "0" ]]; then
            echo "Functional tests failed"
            exit 1
          else
            echo "Functional tests passed"
          fi


#      - name: Cleanup previous instance
#        run: |
#          gcloud run revisions list \
#            --service=$SERVICE \
#            --region=$REGION \
#            --format="value(metadata.name,status.traffic[0].percent)" \
#            --project=$PROJECT_ID | \
#          while read revision traffic; do
#            if [[ "$traffic" == "0" ]]; then
#              echo "Deleting previous instance: $revision"
#              gcloud run revisions delete "$revision" \
#                --region=$REGION \
#                --project=$PROJECT_ID \
#                --quiet
#            fi
#          done