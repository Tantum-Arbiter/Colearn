name: Canary Deployment to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  SERVICE_NAME: gateway-service
  REGION: us-central1
  PROJECT_ID: your-gcp-project-id
  IMAGE_NAME: gateway-service

jobs:
  build-and-test:
  runs-on: ubuntu-latest
  outputs:
    version: ${{ steps.set-version.outputs.version }}

  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'

    - name: Set version
      id: set-version
      run: echo "version=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT

    - name: Build JAR
      working-directory: ./gateway-service
      run: ./gradlew clean bootJar

    - name: Build Docker image (App)
      run: docker build -t ${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.version }} ./gateway-service

    - name: Run Functional Tests
      run: |
        docker build -t func-tests ./func-tests
        docker run --rm -e TARGET_URL=http://localhost func-tests
      # - name: Run Smoke Tests
      #   run: |
      #     docker build -t smoke-tests ./smoke-tests
      #     docker run --rm -e TARGET_URL=http://localhost smoke-tests

        
      # - name: Authenticate GCP
      #   uses: google-github-actions/auth@v2
      #   with:
      #     credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

      # - name: Configure Docker for GCP
      #   run: gcloud auth configure-docker

      # - name: Push image to GCR
      #   run: |
      #     docker tag ${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.version }} \
      #       gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.version }}
      #     docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ steps.set-version.outputs.version }}

  # deploy-canary:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   outputs:
  #     version: ${{ needs.build-and-test.outputs.version }}
  #     current_rev: ${{ steps.rev.outputs.current }}
  #     new_rev: ${{ steps.rev.outputs.new }}

  #   steps:
  #     - name: Authenticate GCP
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

  #     - name: Deploy canary (no traffic)
  #       run: |
  #         gcloud run deploy ${{ env.SERVICE_NAME }} \
  #           --image gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-test.outputs.version }} \
  #           --region ${{ env.REGION }} \
  #           --project ${{ env.PROJECT_ID }} \
  #           --platform managed \
  #           --no-traffic

  #     - name: Identify revisions
  #       id: rev
  #       run: |
  #         CURRENT=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format="value(status.traffic[0].revisionName)")
  #         NEW=$(gcloud run revisions list --region ${{ env.REGION }} --service ${{ env.SERVICE_NAME }} --sort-by="~createTime" --limit=1 --format="value(metadata.name)")
  #         echo "current=$CURRENT" >> $GITHUB_OUTPUT
  #         echo "new=$NEW" >> $GITHUB_OUTPUT

  #     - name: Shift 10% traffic to canary
  #       run: |
  #         gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
  #           --region ${{ env.REGION }} \
  #           --to-revisions ${{ steps.rev.outputs.current }}=90,${{ steps.rev.outputs.new }}=10

  # functional-tests:
  #   runs-on: ubuntu-latest
  #   needs: deploy-canary
  #   outputs:
  #     result: ${{ steps.test.outcome }}

  #   steps:
  #     - name: Run smoke tests against canary
  #       id: test
  #       run: |
  #         set +e
  #         docker build -t func-tests ./func-tests
  #         docker run --rm -e TARGET_URL=https://${{ env.SERVICE_NAME }}-${{ env.REGION }}.a.run.app func-tests
  #         echo "outcome=$?" >> $GITHUB_OUTPUT
  #         exit $?

  # promote-or-rollback:
  #   runs-on: ubuntu-latest
  #   needs: [deploy-canary, smoke-tests]

  #   steps:
  #     - name: Authenticate GCP
  #       uses: google-github-actions/auth@v2
  #       with:
  #         credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

  #     - name: Promote or Rollback
  #       run: |
  #         if [ "${{ needs.smoke-tests.outputs.result }}" = "0" ]; then
  #           echo "Tests passed. Promoting canary..."
  #           gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
  #             --region ${{ env.REGION }} \
  #             --to-revisions ${{ needs.deploy-canary.outputs.new_rev }}=100
  #         else
  #           echo "Tests failed. Rolling back..."
  #           gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
  #             --region ${{ env.REGION }} \
  #             --to-revisions ${{ needs.deploy-canary.outputs.current_rev }}=100
